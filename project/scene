#!/usr/bin/env bash
set -o errexit  # abort when any commands exits with error
set -o pipefail # abort when any command in a pipe exits with error
set -o nounset  # abort when any unset variable is used
set -o noglob # prevent bash from expanding glob
set -o errtrace # inherits trap on ERR in function and subshell
trap 'echo status:$? line:$LINENO line:$BASH_LINENO command:"$BASH_COMMAND" functions:$(printf " %s" ${FUNCNAME[@]:-})' ERR
if [[ "${trace:=0}" -eq 1 ]];then
  PS4='${LINENO}: '
  set -x
  export trace
fi

if [[ "$#" -eq 0 ]];then
  ${0} help

elif [[ "$1" == "help" ]];then shift
  which bash_scripts >/dev/null && bash_scripts show_commands ${0}

elif [ "$1" = "test" ];then shift
  tail -n 80000 /Users/sinangoo/.slack_cache/messages_enriched \
    | sed -n '/^{/p' \
    | jq -r -s -c 'map(select((.type=="message") and (.raw.user_name!=null)))[]' \
    # | jq -r -s -c 'map(select((.type=="message") and (.raw.user_name!=null))|{id:(.raw.channel+"-"+.raw.event_ts),channel:.channel_name,text:("\(.raw.user_name): \(.raw.text[0:50]//"")"|gsub("[^a-zA-Z0-9-_ ,:;]";""))})[]' \
    # | jq -r -s -c 'map(select((.channel=="ep_exploration_day-x") or (.channel=="ep_smalltalk") or (.channel=="ep_announcements") or (.channel=="ep_alldev") or  (.channel=="mp_development")))[]' \

elif [ "$1" = "messages" ];then shift

  # echo -n "" > ~/Downloads/slack_ids.txt

# .slack_cache: tail -n 2000 messages_enriched | sed -n '/^{/p' 
# | jq -r -s -c 'map(select((.type=="message") and (.raw.user_name!=null))|{id:(.raw.channel+.raw.event_ts),channel:.channel_name,text:"\(.raw.user_name): \(.raw.text[0:50]//"")"})[]'
#     | jq -r -s -c 'map(select((.type=="message") and (.raw.user_name!=null))|"\(.raw.user_name): \(.raw.text[0:40]//"")")[]' \

  # tail -n 30000 /Users/sinangoo/.slack_cache/messages_enriched \
  tail -f -n 3000 /Users/sinangoo/.slack_cache/messages_enriched \
    | sed --unbuffered -n '/^{/p' \
    | jq -M --unbuffered -r -c --arg rand "${RANDOM}" 'if ((.type=="message") and (.raw.text != null) and (.raw.text != "") and (.raw.user_name!=null)) then {id:(.raw.channel+"-"+.raw.event_ts+$rand),channel:.channel_name,text:("\(.raw.user_name): \(.time): \(.raw.text[0:150]//"")"|gsub("[^a-zA-Z0-9-_ ,:;]";""))} else empty end' \
    | jq -M --unbuffered -r -c 'if ((.channel=="ep_exploration_day-x") or (.channel=="ep_smalltalk") or (.channel=="ep_announcements") or (.channel=="ep_alldev") or  (.channel=="mp_development")) then . else empty end' \
    | while read line; do

      jq -r '.id' <<<"${line}" >> ~/Downloads/slack_ids.txt
      # channel="$(( $RANDOM % 5 ))"
      channel="$(jq -r '.channel' <<<"${line}")"

      echo "${channel} ---"

      if [[ "${channel}" == "ep_exploration_day-x" ]];then
        jq -M -c \
          '{
            command:"body_create", id:(.id), mass:1,
            size:[3,3,1], pos:[-10,0,30],
            json:{text:(.text),color:"#88f",fontcolor:"#408",fontsize:15,centerText:false}
          }' <<<"${line}" \
        | socat - TCP:localhost:9999
      elif [[ "${channel}" == "ep_smalltalk" ]];then
        jq -M -c \
          '{
            command:"body_create", id:(.id), mass:1,
            size:[3,3,1], pos:[-5,0,30],
            json:{text:(.text),color:"#f88",fontcolor:"#408",fontsize:15,centerText:false}
          }' <<<"${line}" \
        | socat - TCP:localhost:9999
      elif [[ "${channel}" == "ep_announcements" ]];then
        jq -M -c \
          '{
            command:"body_create", id:(.id), mass:1,
            size:[3,3,1], pos:[0,0,30],
            json:{text:(.text),color:"#8ff",fontcolor:"#408",fontsize:15,centerText:false}
          }' <<<"${line}" \
        | socat - TCP:localhost:9999
      elif [[ "${channel}" == "ep_alldev" ]];then
        jq -M -c \
          '{
            command:"body_create", id:(.id), mass:1,
            size:[3,3,1], pos:[5,0,30],
            json:{text:(.text),color:"#f8f",fontcolor:"#408",fontsize:15,centerText:false}
          }' <<<"${line}" \
        | socat - TCP:localhost:9999
      elif [[ "${channel}" == "mp_development" ]];then
        jq -M -c \
          '{
            command:"body_create", id:(.id), mass:1,
            size:[3,3,1], pos:[10,0,30],
            json:{text:(.text),color:"#ff4",fontcolor:"#408",fontsize:15,centerText:false}
          }' <<<"${line}" \
        | socat - TCP:localhost:9999
      fi

      if [[ $(cat ~/Downloads/slack_ids.txt | wc -l) -ge 150 ]];then
        jq -M -c -n --arg id "$(sed -n '1p' ~/Downloads/slack_ids.txt)" \
          '{command:"body_delete", id:$id}' \
          | socat - TCP:localhost:9999
        sed -i'' '1d' ~/Downloads/slack_ids.txt 
      fi

      #sleep 0.1

    done


elif [ "$1" = "channels" ];then shift
  jq -M -c -n --arg id "${RANDOM}" \
    '{
      command:"body_create", id:$id, mass:1,
      size:[4,4,2], pos:[-10,0,10],
      json:{text:"#ep_exploration_day-x",color:"#eef",fontcolor:"#408",fontsize:30,centerText:true,textSide:3}
    }' \
  | socat - TCP:localhost:9999

  jq -M -c -n --arg id "${RANDOM}" \
    '{
      command:"body_create", id:$id, mass:1,
      size:[4,4,2], pos:[-5,0,10],
      json:{text:"#ep_smalltalk",color:"#eef",fontcolor:"#408",fontsize:30,centerText:true,textSide:3}
    }' \
  | socat - TCP:localhost:9999

  jq -M -c -n --arg id "${RANDOM}" \
    '{
      command:"body_create", id:$id, mass:1,
      size:[4,4,2], pos:[0,0,10],
      json:{text:"#ep_announcements",color:"#eef",fontcolor:"#408",fontsize:30,centerText:true,textSide:3}
    }' \
  | socat - TCP:localhost:9999

  jq -M -c -n --arg id "${RANDOM}" \
    '{
      command:"body_create", id:$id, mass:1,
      size:[4,4,2], pos:[5,0,10],
      json:{text:"#ep_alldev",color:"#eef",fontcolor:"#408",fontsize:30,centerText:true,textSide:3}
    }' \
  | socat - TCP:localhost:9999
    
  jq -M -c -n --arg id "${RANDOM}" \
    '{
      command:"body_create", id:$id, mass:1,
      size:[4,4,2], pos:[10,0,10],
      json:{text:"#mp_development",color:"#eef",fontcolor:"#408",fontsize:30,centerText:true,textSide:3}
    }' \
  | socat - TCP:localhost:9999

else
  echo "unknown command:$@"

fi
