#!/usr/bin/env bash
set -o errexit  # abort when any commands exits with error
set -o pipefail # abort when any command in a pipe exits with error
set -o nounset  # abort when any unset variable is used
set -o noglob # prevent bash from expanding glob
set -o errtrace # inherits trap on ERR in function and subshell
trap 'echo status:$? line:$LINENO line:$BASH_LINENO command:"$BASH_COMMAND" functions:$(printf " %s" ${FUNCNAME[@]:-})' ERR
if [[ "${trace:=0}" -eq 1 ]];then
  PS4='${LINENO}: '
  set -x
  export trace
fi

self_dir="$(dirname $(realpath $0))"

: ${sleep_time="0.2"}

if [[ "$#" -eq 0 ]];then
  ${0} help

elif [[ "$1" == "help" ]];then shift
  which bash_scripts >/dev/null && bash_scripts show_commands ${0}

elif [ "$1" = "publish" ];then shift
  while true; do
    jq -c '.' ${self_dir}/debug_bodies.json \
      | rabbit_queue="debug_bodies" python3 ${self_dir}/src/python_pika_write.py
    sleep ${sleep_time}
  done

else
  echo "unknown command:$@"

fi
