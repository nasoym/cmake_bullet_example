#!/usr/bin/env bash
set -o errexit  # abort when any commands exits with error
set -o pipefail # abort when any command in a pipe exits with error
set -o nounset  # abort when any unset variable is used
set -o noglob # prevent bash from expanding glob
set -o errtrace # inherits trap on ERR in function and subshell
trap 'echo status:$? line:$LINENO line:$BASH_LINENO command:"$BASH_COMMAND" functions:$(printf " %s" ${FUNCNAME[@]:-})' ERR
if [[ "${trace:=0}" -eq 1 ]];then
  PS4='${LINENO}: '
  set -x
  export trace
fi

if [[ "$#" -eq 0 ]];then
  ${0} help

elif [[ "$1" == "help" ]];then shift
  which bash_scripts >/dev/null && bash_scripts show_commands ${0}

elif [ "$1" = "base" ];then shift
  jq -M -c -n --arg id "${RANDOM}" \
    '{
      command:"body_create",
      id:$id,
      mass:0,
      size:[200,200,10],
      pos:[0,0,-5],
      json:{color:"#444",castShadow:false,receiveShadow:true}
    }' \
  | socat - TCP:localhost:9999

elif [ "$1" = "body_create" ];then shift
  if [[ "$#" -ge 1 ]];then
    id="$1"; shift
  else
    : ${id:="${RANDOM}"}
  fi
  jq -M -c -n --arg id "$id" \
    '{
      command:"body_create",
      id:$id,
      mass:0,
      size:[4,1,0.5],
      pos:[0,0,5],
      json:{text:"abc def ghi",color:"#88f",fontcolor:"#408",fontsize:20,centerText:false}
    }' \
  | socat - TCP:localhost:9999
  echo "body id:$id"

elif [ "$1" = "body_set" ];then shift
  id="$1"; shift
  jq -M -c -n --arg id "$id" \
    '{
      command:"body_set",
      id:$id,
      pos:[0,0,5],
      rot:[-70,0,0]
    }' \
  | socat - TCP:localhost:9999

elif [ "$1" = "body_create_2" ];then shift
  if [[ "$#" -ge 1 ]];then
    id="$1"; shift
  else
    : ${id:="${RANDOM}"}
  fi
  jq -M -c -n --arg id "$id" \
    '{
      command:"body_create",
      id:$id,
      mass:1,
      size:[3,3,1],
      pos:[0,0,10],
      json:{text:"channel abc",color:"#e8f",fontcolor:"#408",fontsize:50,centerText:false,textSide:4}
    }' \
  | socat - TCP:localhost:9999
  echo "body id:$id"
      # json:{text:"ABC",color:"#e8f",fontcolor:"#408",fontsize:50,centerText:true,pixel_per_unit:256,opacity:0.8}
      # json:{color:"#ff8",opacity:0.2,castShadow:false,receiveShadow:false,wireframe:true}

elif [ "$1" = "body_delete" ];then shift
  id="$1"; shift
  jq -M -c -n --arg id "$id" \
    '{
      command:"body_delete",
      id:$id
    }' \
  | socat - TCP:localhost:9999

elif [ "$1" = "body_impulse" ];then shift
  id="$1"; shift
  : ${x:=10}
  : ${y:=0}
  : ${z:=0}
  jq -M -c -n \
    --arg id "$id" \
    --arg x "$x" --arg y "$y" --arg z "$z" \
    '{
      command:"body_impulse",
      id:$id,
      force:[($x|tonumber),($y|tonumber),($z|tonumber)]
    }' \
    | socat - TCP:localhost:9999

elif [ "$1" = "joint_create" ];then shift
  id="${RANDOM}"
  id1="${RANDOM}1"
  id2="${RANDOM}2"
  jq -M -c -n --arg id "${id}" --arg id1 "${id1}" --arg id2 "${id2}" \
    '
      {
        command:"body_create",
        id:$id1,
        mass:0,
        size:[1.5,2.5,4],
        pos:[0,0,16]
      }
      ,
      {
        command:"body_create",
        id:$id2,
        mass:1,
        size:[1.0,2.0,4],
        pos:[0,0,20]
      }
      ,
      {
        command:"joint_create",
        id:$id,
        id1:$id1,
        id2:$id2,
        pos1:[0,0,2],
        pos2:[0,0,-2],
        rot1:[0,0,0,1],
        rot2:[0,0,0,1]
      }
    ' \
  | socat - TCP:localhost:9999
  echo "joint:$id body1:$id1 body2:$id2"

elif [ "$1" = "ik_setup2" ];then shift
  jq -M -c -n \
    '
      {command:"body_create",id:"root",mass:0,size:[2,2,2],pos:[0,0,5],rot:[0,0,0,1],json:{color:"#f88",opacity:0.8}}
      ,
      {command:"body_create",id:"link1",mass:0,size:[1,1,4],pos:[0,0,8],rot:[0,0,0,1],json:{color:"#8f8",opacity:0.8}}
      ,
      {command:"body_create",id:"link2",mass:0,size:[1,1,5],pos:[0,0,12.5],rot:[0,0,0,1],json:{color:"#88f",opacity:0.8}}
    ' \
  | socat - TCP:localhost:9999

elif [ "$1" = "ik_setup" ];then shift
  jq -M -c -n \
    '
      {command:"body_create",id:"root",mass:0,size:[2,2,2],pos:[0,0,5],rot:[0,0,0,1],json:{color:"#f88"}}
      ,
      {command:"body_create",id:"link1",mass:1,size:[1,1,4],pos:[0,0,8],rot:[0,0,0,1],json:{color:"#8f8"}}
      ,
      {command:"body_create",id:"link2",mass:1,size:[1,1,5],pos:[0,0,12.5],rot:[0,0,0,1],json:{color:"#88f"}}
      ,
      {command:"joint_create",id:"j1",id1:"root",id2:"link1",
        pos1:[0,0,1],pos2:[0,0,-2],rot1:[0,0,0,1],rot2:[0,0,0,1]}
      ,
      {command:"joint_create",id:"j2",id1:"link1",id2:"link2",
        pos1:[0,0,2],pos2:[0,0,-2.5],rot1:[0,0,0,1],rot2:[0,0,0,1]}
      ,
      {command:"joint_settings",id:"j1",settings:[
        {index:3,limits:[-90,90],bounce:0,spring:true,stiffness:100,damping:50},
        {index:4,limits:[-90,90],bounce:0,spring:true,stiffness:100,damping:50},
        {index:5,limits:[0,0],bounce:0,spring:true,stiffness:10,damping:10}
        ]}
      ,
      {command:"joint_settings",id:"j2",settings:[
        {index:3,limits:[-90,90],bounce:0,spring:true,stiffness:100,damping:50},
        {index:4,limits:[-90,90],bounce:0,spring:true,stiffness:100,damping:50},
        {index:5,limits:[0,0],bounce:0,spring:true,stiffness:10,damping:10}
        ]}
    ' \
  | socat - TCP:localhost:9999

elif [ "$1" = "ik_set" ];then shift
  # target11="$1";shift
  # target12="$1";shift
  # jq -M -c -n \
  #   --arg target11 "${target11}" \
  #   --arg target12 "${target12}" \
  #   '
  #     {command:"joint_settings",id:"j1",settings:[
  #       {index:4,motor:true,targetvelocity:1.0,maxmotorforce:200,servo:true,servotarget_rad:($target11|tonumber)}
  #       ]}
  #     ,
  #     {command:"joint_settings",id:"j2",settings:[
  #       {index:4,motor:true,targetvelocity:1.0,maxmotorforce:200,servo:true,servotarget_rad:($target12|tonumber)}
  #       ]}
  #   ' \
  # | socat - TCP:localhost:9999
  #
  #   exit
  target1="$1";shift
  target2="$1";shift
  target11="$1";shift
  target12="$1";shift
  jq -M -c -n \
    --arg target1 "${target1}" \
    --arg target2 "${target2}" \
    --arg target11 "${target11}" \
    --arg target12 "${target12}" \
    '
      {command:"joint_settings",id:"j1",settings:[
        {index:3,motor:true,targetvelocity:1.0,maxmotorforce:200,servo:true,servotarget_rad:($target1|tonumber)},
        {index:4,motor:true,targetvelocity:1.0,maxmotorforce:200,servo:true,servotarget_rad:($target11|tonumber)}
        ]}
      ,
      {command:"joint_settings",id:"j2",settings:[
        {index:3,motor:true,targetvelocity:1.0,maxmotorforce:200,servo:true,servotarget_rad:($target2|tonumber)},
        {index:4,motor:true,targetvelocity:1.0,maxmotorforce:200,servo:true,servotarget_rad:($target12|tonumber)}
        ]}
    ' \
  | socat - TCP:localhost:9999

elif [ "$1" = "ik_set_3" ];then shift
  target1="$1";shift
  target2="$1";shift
  jq -M -c -n \
    --arg target1 "${target1}" \
    --arg target2 "${target2}" \
    '
      {command:"joint_settings",id:"j1",settings:[
        {index:3,motor:true,targetvelocity:1.0,maxmotorforce:200,servo:true,servotarget_rad:($target1|tonumber)}
        ]}
      ,
      {command:"joint_settings",id:"j2",settings:[
        {index:3,motor:true,targetvelocity:1.0,maxmotorforce:200,servo:true,servotarget_rad:($target2|tonumber)}
        ]}
    ' \
  | socat - TCP:localhost:9999

elif [ "$1" = "ik_set_4" ];then shift
  target1="$1";shift
  target2="$1";shift
  jq -M -c -n \
    --arg target1 "${target1}" \
    --arg target2 "${target2}" \
    '
      {command:"joint_settings",id:"j1",settings:[
        {index:4,motor:true,targetvelocity:1.0,maxmotorforce:200,servo:true,servotarget_rad:($target1|tonumber)}
        ]}
      ,
      {command:"joint_settings",id:"j2",settings:[
        {index:4,motor:true,targetvelocity:1.0,maxmotorforce:200,servo:true,servotarget_rad:($target2|tonumber)}
        ]}
    ' \
  | socat - TCP:localhost:9999

elif [ "$1" = "ik_target" ];then shift
  x="$1";shift
  y="$1";shift
  z="$1";shift

  ${0} ik_set_3 $(python3 inverse_kinematics.py ${y} ${z} 4 5) 
  # ${0} ik_set_4 $(python3 inverse_kinematics.py ${x} ${z} 4 5)
  jq ".[0].pos = [(${x}*-1),${y},(${z}+1)]" debug_bodies/debug_bodies.json | sponge debug_bodies/debug_bodies.json

elif [ "$1" = "joint_delete" ];then shift
  id="$1"; shift
  jq -M -c -n --arg id "$id" \
    '{
      command:"joint_delete",
      id:$id
    }' \
  | socat - TCP:localhost:9999

elif [ "$1" = "joint_settings" ];then shift
  id="$1"; shift
  jq -M -c -n --arg id "$id" \
    '{
      command:"joint_settings",
      id:$id,
      settings:[
        {
          index:3,
          limits:[-1,1],
          bounce:0,
          spring:false,
          stiffness:0,
          damping:0
        },
        {
          index:4,
          limits:[-1,1],
          bounce:0,
          spring:false,
          stiffness:0,
          damping:0
        }
      ]
    }' | socat - TCP:localhost:9999

elif [ "$1" = "joint_settings_force" ];then shift
  id="$1"; shift
  jq -M -c -n --arg id "$id" \
    '{
      command:"joint_settings",
      id:$id,
      settings:[
        {
          index:3,
          motor:true,
          targetvelocity:1.0,
          maxmotorforce:200,
          servo:true,
          servotarget:1.0
        },
        {
          index:4,
          motor:true,
          targetvelocity:1.0,
          maxmotorforce:200,
          servo:true,
          servotarget:-1.0
        }
      ]
    }' | socat - TCP:localhost:9999

elif [ "$1" = "joint_settings_force_off" ];then shift
  id="$1"; shift
  jq -M -c -n --arg id "$id" \
    '{
      command:"joint_settings",
      id:$id,
      settings:[
        {
          index:3,
          motor:false
        },
        {
          index:4,
          motor:false
        }
      ]
    }' | socat - TCP:localhost:9999

elif [ "$1" = "clear" ];then shift
  jq -M -c -n \
    '{
      command:"clear"
    }' \
  | socat - TCP:localhost:9999

elif [ "$1" = "set" ];then shift
  # solver_iterations 100 
  # sleep_time 40 (25fps)

  id="$1";shift
  value="$1"; shift
  jq -M -c -n --arg id "$id" --arg value "$value" \
    '{
      command:"set",
      id:$id,
      value:($value|tonumber)
    }' \
  | socat - TCP:localhost:9999

elif [ "$1" = "stack" ];then shift
  jq -M -c -n --arg id "${RANDOM}" \
    '
    {command:"body_create",id:($id+"0"),mass:1,size:[1,1,1],pos:[0,0,20],json:{text:($id+"0"),color:"rgb(50,50,150)"}},
    {command:"body_create",id:($id+"1"),mass:1,size:[1,1,1],pos:[0,0,21],json:{text:($id+"1"),color:"rgb(50,50,150)"}},
    {command:"body_create",id:($id+"2"),mass:1,size:[1,1,1],pos:[0,0,22],json:{text:($id+"2"),color:"rgb(50,50,150)"}},
    {command:"body_create",id:($id+"3"),mass:1,size:[1,1,1],pos:[0,0,23],json:{text:($id+"3"),color:"rgb(50,50,150)"}},
    {command:"body_create",id:($id+"4"),mass:1,size:[1,1,1],pos:[0,0,24],json:{text:($id+"4"),color:"rgb(50,50,150)"}},
    {command:"body_create",id:($id+"5"),mass:1,size:[1,1,1],pos:[0,0,25],json:{text:($id+"5"),color:"rgb(50,50,150)"}},
    {command:"body_create",id:($id+"6"),mass:1,size:[1,1,1],pos:[0,0,26],json:{text:($id+"6"),color:"rgb(50,50,150)"}},
    {command:"body_create",id:($id+"7"),mass:1,size:[1,1,1],pos:[0,0,27],json:{text:($id+"7"),color:"rgb(50,50,150)"}},
    {command:"body_create",id:($id+"8"),mass:1,size:[1,1,1],pos:[0,0,28],json:{text:($id+"8"),color:"rgb(50,50,150)"}},
    {command:"body_create",id:($id+"9"),mass:1,size:[1,1,1],pos:[0,0,29],json:{text:($id+"9"),color:"rgb(50,50,150)"}}
    ' \
  | socat - TCP:localhost:9999

elif [ "$1" = "json" ];then shift
  jq -M -c '.' \
  | socat - TCP:localhost:9999

else
  echo "unknown command:$@"

fi
